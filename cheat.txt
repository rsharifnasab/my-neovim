
""""""""""""" VIM CHEATS """"""""""""

" " BUILTIN COMMANDS CHEAT
:save -> save as and continue editing new file

zz, zt, zb, z. -> change screen position
H,M,L -> change cursor position in current screen
5H: 5th line from upper screen
5L: 5th line from down screen

Set relativenumber
. -> repeat last command

gf: edit the file which its name is under cursor

~: change case one char
g~ft: change case to first t (use with motion)
guft: lowercase until first t
gUft: uppercase until first t

^: start of line (after spaces)
+,-: next line after prev line (first char after whitespace)
gg: first line of file
G: last line of file
5gg or 5G: go to line 5
30% : go to line of 30/100 of file
12| : go to 12nd column

j : join this line and next line

z= : view suggestions in spell mode
zg : mark misspelles word as correct

Move with [( to start of parentheses
and with ]) to end of parentheses (and same for `{`,  `#`, `*` `[`)

Move with () and { } between lines and parentheses

ga : show ascii value of char under cursor
:redraw! :force redraw screen

Insert mode:
    + ctrl v + ascii code: insert that character
    + ctrl A: insert text from last insert mode operation

Use registers
    + "2 : use 2nd register for next clipboard operation
    + :Reg  all registers
    + :reg 2  what is in 2nd register

Visual mode
    + o : set cursor to start of highlighted area
    + gv: select previously selected area



:make -> compile with makefile and go directly to compile errors ^_^
open compile errors window with :copen (or :cc)
and close if with :cclose or just scroll over


" " MARKS
ma to mz : save current place
`a to `z : go back to mark
(or 'a to 'z to go to the fist of that line)
m{uppercase} -> global between files
y'k : copy from here to k (marked as k)
d'k : delete from here to k (marked as k)

" " FUZZY FILE finder
fuzzy find file in project with telescope <leader><tab>
fuzzy find word in all files with telescope <leader>f


" " TAGS
(install ctags first)
create tags file  with 'MakeTags' (function to: :! ctags -R .)
^] to jump the definition of tag under cursor
^t to jump back at the first place
g] to show list of tags under cursor



" " AUTOCOMPLETE
vim built in autocomplete (ins-complete)
^n: normal complete
^x^n: complete from just this file
^x^f complete filenames
^x^] complete tags only



" " SEARCH
ctrl L for clear highlighted search result
ctrl+f: neo-tree
* -> search word under cursor
g* -> search non-strict for word under cursor
gd and gD: local definition of word under cursor
? -> search backward

REPLACE
:%s/search_for_this/replace_with_this/
:%s/search_for_this/replace_with_this/c


" " BUFFERS
Browse tabs <C-p> ans <C-o>
New tab <C-n>
Close current buffer <C-q>

" tabs
:tabedit file1 -> open new file in tab
:tabfirst , :tablast -> move to first and last tab
:tabn , :tabp -> move one tab
:tabs -> show all tabs
:tabclose -> close this tab
:tabonly -> close all tabs except this
vim -p file1 file2 -> open different files in tabs


" " window splitting
:split filename  - split window horizontally and load filename
:vsplit file     - vertical split and open file
ctrl-w up arrow  - move cursor up a window
ctrl-w ctrl-w    - move cursor to another window (cycle)
ctrl-w _         - maximize current window vertically
ctrl-w |         - maximize current window horizontally
ctrl-w =         - make all equal size
:sview file      - same as split, but readonly
:close           - close current window
CTRL-W [N] -   Decrease current window height by N (default 1)
CTRL-W [N] +   Increase current window height by N (default 1)
CTRL-W [N] <   Decrease current window width by N (default 1)
CTRL-W [N} >   Increase current window width by N (default 1)


" " indent
C-t and C-d -> indent forward and backward in insert mode
< and >  in visual mode do the same

auto indent (and format):
= -> for selected text
== -> current line
:Format -> use plugin to auto indent



" " fold
you can `zc` (close) and `zo` and `za` (open)
to fold and unfold


" " MACROS
start saving in `a` with `qa`
then press q to stop saving
go to a line and `@a`
after the first @a, you can just @@


" " SESSIONS
:mksession file.vim  -> create a vim file reproduce current vim tabs
:mks!  -> update savd session
vim -S file.vim -> open vim in savd state

" " OTHERS
to redirect output of command to vim:
ls | vim -
:set laststatus 0 -> no status line

turn off showmatch:
:NoMatchParen
and turn on again:
:DoMatchParen

turn on spell check
set spell
SpellCheck

di" => delete inside "
da" -> delete whole " (containing ")
more info -> :h text-objects


""""""""""""""""""""""""""""""""
